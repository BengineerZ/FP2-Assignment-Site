import React from 'react';

import './DevProc.css'; 

const DevProc = () => {
  return (
    <div className='dev section' id='dev'>
      <h2>Development Process</h2>
      <h4>How we built the visualization, and what we're going to do next!</h4>
      <h3>Design Decisions</h3>
        <p>We chose this flowing, cluster-based dot visualization as our opening plot to emphasize how, over time, the housing market is increasingly dominated by speculative investors. Inspired by a rate-of-change diagram with flowing points we’d seen before, we wanted to show movement between clusters in a way that powerfully illustrates money and property transfers. We went through multiple iterations, starting with having each dot represent a single house, which failed to account for the fact that investors often buy larger or pricier properties. We next tried encoding each dot as $100K of housing market value but ultimately realized that showing a profit, rather than just revenue, revealed the higher margins made by investors selling houses. Our final design clusters the housing market to the left and uses two channels, investor and non-investor, whose dots flow while changing color depending on the channel to a final cluster representing the Boston population. We introduced interactive features to avoid overwhelming viewers while allowing data-curious viewers to look more deeply at the data. Specifically, we introduced a temporal scrubbing feature to enable the user to drag through time, select years, or simply just auto-play the motion of the dots. In the future, we intend to show more fine-grained details by clicking on parts of the visualization. We want to show a zoom on the investor channel that breaks it down by investor type (small, medium, large, institutional) and a zoom on the housing market itself that re-clusters dots by investor type. We contemplated additional encodings for property sizes or color for monetary value but decided against overloading our initial visualization and planned to incorporate those details in future plots instead.</p>
        <p>Although the flowing-dot design effectively conveys the sense of rapid growth in speculative investment, it doesn’t fully capture the differing scales of properties within the same visualization. In the future, we’d like to add transitions between zoom levels or add annotations to highlight this nuance, ensuring that our audience (policymakers and homebuyers) can follow the evolving ownership patterns more easily. Adding temporal annotations to contextualize spikes or dips in profit would be very helpful, too, such as a label for when the ‘08 recession occurred.  Additionally, we might consider side-by-side comparisons or smaller multiple plots to help viewers compare investor segments without cluttering the main design. We think this could be useful to depict similar information but through a marking system that doesn’t use the area of dots. This is because using area increases spatial occupation by a quadratic relationship to the absolute increase. For this reason, we’ve realized using dots can be a tad ineffective when comparing ratios of absolute magnitude since a circle of double area only has a square-root 2-factor increase in radius. </p>
        <p>While polishing our visualization, we took the liberty of making artistic choices to make the visualization clearer and more aesthetically pleasing. We started with choosing sans-serif fonts for annotations and highly contrasting colors between investor and non-investor averages (red and blue, respectively). We also chose to represent the profit dots as green with dollar signs to make it clear to the reader that each dot is a unit of money. We had originally had them as color-coded as red and blue, but this didn’t make it clear that every dot represents an identical amount of monetary value. To make it extra clear, we chose to add a legend at the bottom left. To make the visualization more appealing, we used the Apple Emoji keyboard house as a visual source for income, representing the housing market. This is appended with annotations and a hover-to-show system to reveal the BOXRSA Case-Shiller Housing Price Index for Boston, MA. We intended for this hovering system to simultaneously depict how housing prices are increasing while profit is also growing. These design choices were overall highly effective in making the visualization experience more pleasant while also utilizing colors and annotations to make the story clearer.</p>
      <h3>Development Process</h3>
      <p>We spent roughly 40 person-hours developing our application, splitting the work across coding, data analysis, and design ideation. Ben started the technical setup, creating the website framework in TypeScript and D3.js, including a working demo featuring simulated physics for our flowing-dot concept. At the same time, Nitish, Adam, and Martin focused on exploring the residential sales dataset to validate our hypothesis that speculative investment is starting to dominate sales. Through this analysis, they discovered that tracking only the number of homes sold can be misleading and that delving into price and profit better highlights the impact of speculative buyers. Once this insight emerged, Adam began sketching our visualization on a tablet while Nitish and Martin continued refining the data. Everyone contributed feedback to the initial sketches during a joint meeting, and we later met again to refine the design further and break down tasks. Adam handled the write-up, Nitish and Martin processed data and coded design elements, and all team members worked together to polish the final product.</p>
      <p>Overall, the most time-consuming parts were the early data discovery and the coding of the interactive features. Though we found our collaborative sessions valuable for generating ideas and refining our approach, we noticed some inefficiency due to task overlap. In future milestones, we plan to improve our workflow by assigning more specific tasks and timelines while still maintaining the benefits of group brainstorming. This balance should help us optimize our development process and create more effective, data-driven visualizations.</p>
      <h3>Future Work</h3>
      <p>We plan to devote the next 4.5 calendar weeks (~18 person-weeks) to building five to six linked visualizations, a cohesive narrative, and an integrated website. In the first week, we will finalize data processing and outline a high-level design plan for all visuals. Ben will create the foundational website structure (TypeScript/D3.js) and ensure each visualization “slot” is ready to accept interactive components (Deadline: Week 1). Meanwhile, Nitish, Adam, and Martin will refine the residential sales data and confirm our main narrative threads, making sure we identify the key stories each visualization will tell (Deadline: Week 1). By the end of Week 2.5 (our MVP milestone), we aim to have at least three of our visualizations fully functional, with core interactions and basic storytelling elements (e.g., annotations, tooltips, transitions). Ben will focus on hooking up interactivity (like zooming and time sliders) for these initial visualizations (Deadline: Week 2.5), Nitish and Martin will handle any remaining data manipulations (such as subsetting or calculating profit margins), and Adam will finalize the narrative text and page layout for each section of the site (Deadline: Week 2.5). In Weeks 3 and 4, we will complete the remaining two to three visualizations, polish transitions and color encodings, and tightly weave the story so that viewers can seamlessly move from one chart to the next. Throughout, the entire team will meet for design feedback sessions, and all four of us will contribute to refining both the code and narrative elements as we go.</p>
      <p>If something goes wrong—such as data issues, technical roadblocks, or time underestimation—we will prioritize the must-have visuals that best tell the story of rising speculative investment. Our fallback plan is to pare down the complexity of any visualizations that prove too time-consuming, focus on fewer but clearer interactive elements, or consolidate similar plots into a single overview chart if necessary. By identifying optional “nice-to-haves” early (such as advanced transitions or additional segmentation by investor type), we can still present a coherent narrative even if we have to drop certain visual flourishes in order to meet our deadlines.</p>
    </div>
  );
};

export default DevProc;
